name: Deploy Container Worker

on:
  workflow_dispatch:

env:
  RESOURCE_GROUP: rg-cloudkit-dev-cus
  CONTAINER_APP_NAME: worker-cloudkit-dev-cus
  ACR_SERVER: acrcloudkitdevcus.azurecr.io
  ACR_IMAGE: acrcloudkitdevcus.azurecr.io/cloudkit-worker:latest

jobs:
  deploy_worker:
    runs-on: ubuntu-latest

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Esperar a que Container App est√© listo
        run: |
          echo "üîÑ Esperando a que el Container App est√© listo..."
          for i in {1..15}; do
            STATE=$(az containerapp show \
              --name $CONTAINER_APP_NAME \
              --resource-group $RESOURCE_GROUP \
              --query "properties.provisioningState" -o tsv 2>/dev/null)

            if [ -z "$STATE" ]; then
              echo "Estado a√∫n no disponible, reintentando..."
              sleep 10
              continue
            fi

            echo "Intento $i: Estado actual = $STATE"

            if [ "$STATE" == "Succeeded" ]; then
              echo "‚úÖ Container App listo."
              break
            fi

            if [ "$STATE" == "Failed" ]; then
              echo "‚ùå Error en el aprovisionamiento del Container App."
              exit 1
            fi

            sleep 10
          done

      - name: Asignar rol AcrPull al Container App
        run: |
          PRINCIPAL_ID=$(az containerapp show \
            --name $CONTAINER_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --query identity.principalId -o tsv)

          ACR_ID=$(az acr show \
            --name acrcloudkitdevcus \
            --query id -o tsv)

          echo "üîê Asignando rol AcrPull..."
          az role assignment create \
            --assignee $PRINCIPAL_ID \
            --scope $ACR_ID \
            --role AcrPull || true

      - name: Configurar acceso al ACR
        run: |
          echo "üîê Configurando acceso al ACR..."
          az containerapp registry set \
            --name $CONTAINER_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --server $ACR_SERVER \
            --identity system

      - name: Actualizar imagen
        run: |
          echo "üöÄ Actualizando imagen a $ACR_IMAGE"
          az containerapp update \
            --name $CONTAINER_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --image $ACR_IMAGE
